{"version":3,"sources":["webpack:///./src/components/features/index.js","webpack:///./src/components/how-to/index.js","webpack:///./src/components/header/index.js","webpack:///./src/components/icon/index.js","webpack:///./src/components/icon/github.icon","webpack:///./src/components/footer/index.js","webpack:///./src/components/layout/index.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Features","react_default","a","createElement","gatsby_browser_entry","query","render","data","className","id","allDataJson","edges","node","features","map","item","i","key","title","_3278266677","HowTos","howTo","_1575101630","Header","href","Icon","props","viewBox","width","height","fill","xlinkHref","propTypes","PropTypes","string","oneOf","symbol","browser_symbol_default","use","content","github","browser_sprite_build_default","add","Footer","target","rel","icon","Github","TemplateWrapper","_ref","children","Helmet_default","header","footer","element","isRequired","IndexPage","layout","how_to","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","Error","object","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-js-a9cd6d0194a4fb0259ee.js","sourcesContent":["import React from 'react';\nimport './_features.scss';\n\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst Features = () => (\n    <StaticQuery\n        query={ graphql`\n      query FeaturesQuery {\n        allDataJson {\n          edges {\n            node {\n              features {\n                title\n              }\n            }\n          }\n        }\n      }\n    ` }\n        render={ (data) => (\n            <section className=\"features\" id=\"features\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h4 className=\"features-title\">Features</h4>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <ul className=\"features-list\">\n                                {data.allDataJson.edges[0].node.features.map((item, i) => (\n                                    <li className=\"features-list-item\" key={ i }>\n                                        {item.title}\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        ) } />\n);\n\nexport default Features;\n","import React from 'react';\n\nimport './_how-to.scss';\n\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst HowTos = () => (\n    <StaticQuery\n        query={ graphql`\n      query HowtoQuery {\n        allDataJson {\n          edges {\n            node {\n              howTo {\n                title\n              }\n            }\n          }\n        }\n      }\n    ` }\n        render={ (data) => (\n            <section className=\"howto\" id=\"howto\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h4 className=\"howto-title\">How to</h4>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <ol className=\"howto-list\">\n                                {data.allDataJson.edges[0].node.howTo.map((item, i) => (\n                                    <li className=\"howto-list-item\" key={ i }>\n                                        {item.title}\n                                    </li>\n                                ))}\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        ) } />\n);\n\nexport default HowTos;\n","import React from 'react';\n\nimport './_header.scss';\n\nconst Header = () => (\n    <header className=\"header\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"header-content\">\n                        <span className=\"header-logo\">Gatsby React Boilerplate</span>\n                        <nav className=\"header-nav\">\n                            <ul className=\"header-nav-list\">\n                                <li className=\"header-nav-list-item\">\n                                    <a href=\"#features\">Features</a>\n                                </li>\n                                <li className=\"header-nav-list-item\">\n                                    <a href=\"#howto\">How To</a>\n                                </li>\n                            </ul>\n                        </nav>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Icon = (props) => (\n    <svg\n        viewBox={ props.viewBox }\n        width={ props.width }\n        height={ props.height }\n        fill={ props.fill }>\n        <use xlinkHref={ `#${props.id}` } />\n    </svg>\n);\n\nIcon.propTypes = {\n    viewBox: PropTypes.string,\n    id: PropTypes.string,\n    width: PropTypes.oneOf(['number', 'string']),\n    height: PropTypes.oneOf(['number', 'string']),\n    fill: PropTypes.string,\n};\n\nexport default Icon;\n","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"github\",\n  \"use\": \"github-usage\",\n  \"viewBox\": \"0 0 438.549 438.549\",\n  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 438.549 438.549\\\" id=\\\"github\\\">\\n  <path d=\\\"M409.132 114.573c-19.608-33.596-46.205-60.194-79.798-79.8C295.736 15.166 259.057 5.365 219.27 5.365c-39.78 0-76.47 9.804-110.062 29.408-33.596 19.605-60.192 46.204-79.8 79.8C9.803 148.168 0 184.853 0 224.63c0 47.78 13.94 90.745 41.827 128.906 27.884 38.164 63.906 64.572 108.063 79.227 5.14.954 8.945.283 11.42-1.996 2.474-2.282 3.71-5.14 3.71-8.562 0-.57-.05-5.708-.144-15.417-.098-9.71-.144-18.18-.144-25.406l-6.567 1.136c-4.187.767-9.47 1.092-15.846 1-6.38-.09-13-.757-19.85-2-6.856-1.23-13.23-4.085-19.13-8.558-5.9-4.473-10.087-10.328-12.56-17.556l-2.857-6.57c-1.903-4.374-4.9-9.233-8.99-14.56-4.095-5.33-8.234-8.944-12.42-10.847l-2-1.43c-1.33-.952-2.568-2.1-3.71-3.43-1.143-1.33-1.998-2.663-2.57-3.997-.57-1.335-.097-2.43 1.43-3.29 1.523-.858 4.28-1.275 8.28-1.275l5.706.853c3.807.763 8.516 3.042 14.133 6.85 5.614 3.807 10.23 8.755 13.846 14.843 4.38 7.81 9.657 13.76 15.846 17.85 6.183 4.1 12.42 6.14 18.7 6.14 6.28 0 11.702-.473 16.272-1.42 4.562-.95 8.845-2.382 12.844-4.284 1.712-12.76 6.376-22.56 13.987-29.41-10.845-1.14-20.6-2.857-29.26-5.14-8.66-2.286-17.606-5.996-26.836-11.14-9.234-5.137-16.895-11.516-22.984-19.126-6.09-7.615-11.09-17.61-14.99-29.98-3.9-12.374-5.85-26.648-5.85-42.826 0-23.035 7.52-42.637 22.558-58.817-7.044-17.316-6.38-36.73 1.997-58.24 5.52-1.713 13.706-.426 24.554 3.855 10.85 4.285 18.792 7.954 23.84 10.996 5.044 3.04 9.09 5.617 12.133 7.707 17.706-4.948 35.977-7.42 54.82-7.42s37.116 2.472 54.822 7.42l10.85-6.85c7.418-4.57 16.18-8.758 26.26-12.565 10.09-3.806 17.803-4.854 23.135-3.14 8.56 21.51 9.325 40.923 2.28 58.24 15.035 16.18 22.558 35.788 22.558 58.818 0 16.18-1.96 30.5-5.854 42.968-3.9 12.47-8.94 22.46-15.126 29.98-6.19 7.52-13.9 13.85-23.13 18.987-9.233 5.14-18.183 8.85-26.84 11.137-8.663 2.285-18.416 4.003-29.264 5.145 9.894 8.564 14.842 22.08 14.842 40.54v60.23c0 3.42 1.19 6.28 3.572 8.56 2.38 2.28 6.133 2.95 11.273 1.995 44.165-14.653 80.187-41.062 108.07-79.226 27.88-38.16 41.83-81.13 41.83-128.91-.01-39.77-9.82-76.455-29.416-110.05z\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import React from 'react';\nimport Icon from '../icon';\nimport Github from '../icon/github.icon';\nimport './_footer.scss';\n\nconst Footer = () => (\n    <footer className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"footer-content\">\n                        <a\n                            href=\"https://github.com/PrototypeInteractive/gatsby-react-boilerplate\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\">\n                            <Icon icon={ Github } width={ 24 } height={ 24 } fill=\"#fff\" />\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport Header from '../header';\nimport Footer from '../footer';\n\nimport '../../../sass/style.scss';\n\nconst TemplateWrapper = ({ children }) => (\n    <div>\n        <Helmet title=\"Gatsby React Boilerplate\" />\n        <Header />\n        {children}\n        <Footer />\n    </div>\n);\n\nTemplateWrapper.propTypes = {\n    children: PropTypes.element.isRequired,\n};\n\nexport default TemplateWrapper;\n","import React from 'react';\nimport Features from '../components/features';\nimport HowTo from '../components/how-to';\nimport Layout from '../components/layout';\n\nconst IndexPage = () => (\n    <Layout>\n        <main>\n            <Features />\n            <HowTo />\n        </main>\n    </Layout>\n);\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}